#+title: paw (point-and-write)

#+attr_org: :width 200px
[[file:images/logo.jpg]]

Study for a life in Emacs.

~paw.el~ was created in 2021 as an annotation tool, but I was not used it a lot at that time. Recently I picked it up and dramatically changed its usage. Now it is a complete solution of making annotations and language learning tools, right inside Emacs. 

paw relies on sqlite. All annotations are saved inside a database, which means it can be easily backup and you can read and make annotation right inside Emacs (PC/mobile) using same database. 

paw's ideas are coming from all following great tools:
1. LingQ: Learning a language by reading
2. Kindle Vocabulary Builder
3. org noter
4. Chatgpt
5. SDCV
6. go-translate
7. Eudic
8. 蒙哥阅读器
and more.

This package is mainly used along with:
1. nov-mode
2. org-mode
3. eaf-mode
3. eww-mode
4. pdf-view-mode

But it is able to work with all modes (defined in ~paw-annotation-mode-supported-modes~) in Emacs.

I'll update the doc in the future, there are too much to cover. But I'll show you the most useful cases first:

* Reading and annotation
1. Open an epub file using nov.el or an org file or browse web with eww
2. Enable ~paw-annotation-mode~ (buffer will be turned into read-only if
   ~paw-annotation-read-only-enable~ is t to avoid accidental alternation)
3. Use paw.el add word/highlight/bookmark/todo/, for example, ~paw-add-word~,
   ~paw-add-highlight~... Please check M-x ~paw-add-*~ related commands for all
   type of supported annotations.
4. Annotations will be highlighted via overlay. Under the annotation, you
   can do various of operations. For example, to edit the annotation, under the
   annotation, press ~i~, ~paw-find-note~. It will create an org file under
   ~paw-note-dir~ dedicated for this annotation, save by C-c C-c, changes will be
   saved in the database as well.
6. Call ~paw~ to manage all annotations.

#+attr_org: :width 600px
[[file:images/demo1.png]]

* Language Learning
1. Copy a text you want to learn to an org file or browse a page with eww.
2. Enable ~paw-annotation-mode~
3. Click/Select word/sentence with ~paw-view-note~, it will show you an
   informative buffer of the word/sentence. It has dictionary, translation,
   notes and also able to search by external browser.
4. Use ~paw-add-online-word~ to add a new word. (currently only support Eudic,
   apply Authorization key on https://my.eudic.net/OpenAPI/Authorization, and
   fill it into ~paw-authorization-keys~ before adding online words)) All online
   words will be highlighted on any buffers that were enabled
   ~paw-annoation-mode.~
5. Under any annotation, click or press Enter to invoke ~paw-view-note~, an buffer
   with saved meanings, dictionary, translation, notes is shown.
6. Click/Select word/sentence with ~paw-view-note-current-thing~, ~paw-view-note-next-thing~, ~paw-view-note-prev-thing~, it will do segmentation using [[https://github.com/ikawaha/kagome][kagome]]
   (Japanese), and [[https://github.com/skywind3000/ECDICT][ECDICT]] (English).
7. Check https://www.lingq.com/en/, you know more ideas how to learn a foreign
   language with ~paw.el~.


#+attr_org: :width 600px
[[file:images/demo2.png]]

* Search a word/sentence
1. Select/Under a word/sentence
2. Run ~paw-view-note~ (no segmentation, good for word) or
   ~paw-view-note-current-thing~ (segmentation, good for sentence)
3. Optimized for eaf-mode, nov-mode, eww-mode, focus-mode
#+attr_org: :width 600px
[[file:images/demo3.png]]

* Installation
Please install [[https://github.com/Dushistov/sdcv][sdcv]], [[https://github.com/ikawaha/kagome][kagome]] (For Japanese segmentation), [[https://github.com/skywind3000/ECDICT][ecdict]](for English
learning), [[https://github.com/larstvei/Focus][focus]], [[https://github.com/rany2/edge-tts/][edge-tts]] (pronunciation), [[https://github.com/karthink/gptel][gptel]], [[https://github.com/lorniu/go-translate][go-translate]], [[https://github.com/goldendict/goldendict][goldendict]], If
you want to make use all power of it.

You may also need to install [[https://github.com/chenyanming/shrface][shrface]], [[https://github.com/chenyanming/wallabag.el][wallabag]], [[https://github.com/emacs-eaf/emacs-application-framework][eaf]], [[https://github.com/manateelazycat/popweb][popweb]], pdf-tools, and more
(Please check the source code what are missing, I'll organize them better in the
future.)

** Install paw
#+begin_src emacs-lisp
(package! paw :recipe (:host github :repo "chenyanming/paw" :files ("*")))
#+end_src

** Optional: Language Detection
Set ~paw-detect-language-p~ to t, and run ~pip install gcld3~, paw will use gcld3
(may use others tools in the future, check ~paw-detect-language-program~) to
detect the language for more accurate tts pronunciation and translation.

If you don't want to use language detection program, paw use simple ascii rate:
~paw-ascii-rate~ to detect the language, if the rate is greater than
~paw-ascii-rate~, then it is considered as English, otherwise use
~paw-detect-language-program~ to detect the language of the TEXT, if
~paw-detect-language-p~ is t, or return as ~paw-non-ascii-language~ if
~paw-detect-language-p~ is nil. 

Setup ~paw-python-program~ if necessary, if the pip module is installed with
different python version

Supported edge-tts voice:
- ~paw-tts-english-voice~
- ~paw-tts-zh-cn-voice~
- ~paw-tts-zh-tw-voice~
- ~paw-tts-japanese-voice~
- ~paw-tts-korean-voice~
- Other languages: ~paw-tts-multilingual-voice~
Welcome PRs to add more languages :)

** Optional: Kagome (Japanese morphological analyzer)
#+begin_src sh
go install github.com/ikawaha/kagome/v2@latest
#+end_src

** Optional: Setup ECDICT (A English to Chinese offline dictionary)
#+begin_src sh
git clone https://github.com/chenyanming/ECDICT
cd ECDICT
python startdict.py
cp ecdict.db ~/org
#+end_src

Setup ~paw-python-program~ if necessary, and ~paw-ecdict-db~ pointing to the location of ecdict.db.

* My Setup
#+begin_src emacs-lisp
(use-package paw
  :init
  (setq paw-db-file (expand-file-name "paw.sqlite" org-directory))
  ;; ecdict dictionary
  (setq paw-ecdict-db (expand-file-name "ecdict.db" org-directory))
  :custom
  ;; (paw-svg-enable t)
  (paw-pbm-enable t)
  (paw-detect-language-p t)
  (paw-click-overlay-enable t)
  (paw-annotation-read-only-enable t)
  ;; (paw-posframe-p (if (string-equal system-type "android") t))
  ;; For online words, you have to apply api on
  ;; https://my.eudic.net/OpenAPI/Authorization
  (paw-authorization-keys  "xxxxx")
  :config
  (setq paw-note-dir (expand-file-name "Dict_Notes" org-directory))
  ;; if the file was moved to other places after adding annotations, we can add
  ;; the parent path of the file for paw to search. This is necessary for
  ;; multiple clients (PC/Mobile/Pad) to use the same database but file location
  ;; is different.
  (setq paw-annotation-search-paths '("~/Data/Books/"
                                       "/storage/emulated/0/Books/"
                                       "/storage/emulated/0/Download/"
                                       "/storage/emulated/0/Download/Telegram"
                                       "/storage/emulated/0/Org/web/"
                                       "~/org/web"
                                       ))

  ;; show image annotation in *paw-view-note*
  (add-hook 'paw-view-note-mode-hook #'org-display-inline-images)
  (add-hook 'context-menu-functions #'paw-annotation-context-menu)

  ;; use popweb as browse function
  (unless (string-equal system-type "android")
      (setq paw-dictionary-browse-function 'popweb-url-input)
      (setq paw-mdict-dictionary-function 'popweb-url-input))

  )




#+end_src
