#+title: paw (point-and-write)

#+attr_org: :width 200px
[[file:images/logo.jpg]]

Study for a life in Emacs.

~paw.el~ was created in 2021 as an annotation tool, but I was not used it a lot at that time. Recently I picked it up and dramatically changed its usage. Now it is a complete solution of making annotations and language learning tools, right inside Emacs. 

paw relies on sqlite. All annotations are saved inside a database, which means it can be easily backup and you can read and make annotation right inside Emacs (PC/mobile) using same database. 

paw's ideas are coming from all following great tools:
1. LingQ: Learning a language by reading
2. Kindle Vocabulary Builder
3. org noter
4. Chatgpt
5. SDCV
6. go-translate
7. Eudic
8. 蒙哥阅读器
and more.

This package is mainly used along with:
1. nov-mode
2. org-mode
3. eaf-mode
3. eww-mode
4. pdf-view-mode

But it is able to work with all modes (defined in ~paw-annotation-mode-supported-modes~) in Emacs.

I'll update the doc in the future, there are too much to cover. But I'll show you the most useful cases first:

* Reading and annotation
1. Open an epub file using nov.el or open an org file or browse web with eww
2. Enable ~paw-annotation-mode~ (buffer will be turned into read-only if
   ~paw-annotation-read-only-enable~ is t to avoid accidental alternation)
3. Use ~paw~ add word/highlight/bookmark/todo/, for example, ~paw-add-word~,
   ~paw-add-highlight~... Please check M-x ~paw-add-*~ related commands for all
   type of supported annotations.
4. Annotations will be highlighted via overlay. Under the annotation, you can do
   various of operations. For example, to edit the annotation, under the
   annotation, press ~i~, ~paw-find-note~. It will create an temporary org file
   dedicated for this annotation, put your content under ~Saved Meanings~ or ~Notes~
   (Don't remove other things!), then save by ~C-c C-c~, changes under ~Saved
   Meanings~ and ~Notes~ will be saved in the database respectively.
5. Call ~paw~, ~paw-list-all-annotations~ or ~paw-list-all-links~ to manage or jump to
   annotation location (One useful case is that make highlight or create
   bookmark on ~eww~, and jump back to the exact same annotation location simply
   pressing Enter)
5. Under the annotation, M-x ~paw-view-notes~, all notes under the same path will
   be shown, giving you an overview on all notes you've made for the same file.
6. ~paw-add-bookmark~ works great on eww-mode/eaf-mode (browser or pdf-viewer)

#+attr_org: :width 600px
[[file:images/demo1.png]]

* Language Learning
1. Copy a text you want to learn to an org file or browse a page with eww.
2. Enable ~paw-annotation-mode~
3. Click/Select word/sentence with ~paw-view-note~, it will show you an
   informative buffer of the word/sentence. It has dictionary, translation,
   notes and also able to search by external browser.
4. Use ~paw-add-offline-word~ or ~paw-add-online-word~ to add a new word. For online
   word, currently only support Eudic, apply Authorization key on
   https://my.eudic.net/OpenAPI/Authorization, and fill it into
   ~paw-authorization-keys~ before adding online words. All offline/online words
   appeared on any buffers that were enabled ~paw-annoation-mode~ will be
   highlighted, useful for language learners using the important method:
   Repetition.
5. For offline words, please setup ~paw-offline-studylist~ before using it. By
   default we have two offline studylists: =English Studylist= and =Japanese
   Studylist=.
5. You can also use ~paw-add-word~. Unlike offline/online word, the word added by
   ~paw-add-word~ is linked with an unique id, it is only highlighted at the
   location where we added it.
6. Under any annotation, click or press ~v~ to invoke ~paw-view-note~, a buffer
   with saved meanings, dictionary, translation, notes is shown.
7. Under any annotation, click or press ~c~ to invoke
   ~paw-change-online-word-learning-level~, select from level 1~5. 1~4 are
   controlled by ~paw-level-1-word-face~ to ~paw-level-4-word-face~, while 5 is
   considered as Known word, skipping adding overlay face (just hiding). You can
   change the word to level 5 while keep it hiding, but if you don't need it
   anymore, simply run ~paw-delete-word~ to delete it.
8. Click/Select word/sentence with ~paw-view-note-current-thing~,
   ~paw-view-note-next-thing~, ~paw-view-note-prev-thing~, it will do segmentation
   using [[https://github.com/ikawaha/kagome][kagome]] (Japanese), and [[https://github.com/skywind3000/ECDICT][ECDICT]] (English).
9. Check https://www.lingq.com/en/, you know more ideas how to learn a foreign
   language with ~paw.el~.
10. Run ~paw-export-notes-to-csv~, check the csv file under ~paw-csv-file~, import it
    to [[https://apps.ankiweb.net/][Anki]] for further studying.
11. Both ~paw-add-word~ and ~paw-add-online-word~ will capture the context sentence
    and save it into Notes field.

Tip: Find some interesting contents on LingQ, and browse using eww, enable
~paw-annotation-mode~, enjoy language studying!


#+attr_org: :width 600px
[[file:images/demo2.png]]

* Search a word/sentence
1. Select/Under a word/sentence
2. Run ~paw-view-note~ (no segmentation, good for word) or
   ~paw-view-note-current-thing~ (segmentation, good for sentence)
3. Optimized for eaf-mode, nov-mode, eww-mode, focus-mode
#+attr_org: :width 600px
[[file:images/demo3.png]]

* Installation
Please install [[https://github.com/Dushistov/sdcv][sdcv]], [[https://github.com/ikawaha/kagome][kagome]] (For Japanese segmentation), [[https://github.com/skywind3000/ECDICT][ecdict]](for English
learning), [[https://github.com/larstvei/Focus][focus]], [[https://github.com/rany2/edge-tts/][edge-tts]] (pronunciation), [[https://github.com/karthink/gptel][gptel]], [[https://github.com/lorniu/go-translate][go-translate]], [[https://github.com/goldendict/goldendict][goldendict]], If
you want to make use all power of it.

You may also need to install [[https://github.com/chenyanming/shrface][shrface]], [[https://github.com/chenyanming/wallabag.el][wallabag]], [[https://github.com/emacs-eaf/emacs-application-framework][eaf]], [[https://github.com/manateelazycat/popweb][popweb]], pdf-tools, and more
(Please check the source code what are missing, I'll organize them better in the
future.)

** Install paw
#+begin_src emacs-lisp
(package! paw :recipe (:host github :repo "chenyanming/paw" :files ("*")))
#+end_src

** Optional: Language Detection
Set ~paw-detect-language-p~ to t, and run ~pip install gcld3~, paw will use gcld3
(may use others tools in the future, check ~paw-detect-language-program~) to
detect the language for more accurate tts pronunciation and translation.

If you don't want to use language detection program, paw use simple ascii rate:
~paw-ascii-rate~ to detect the language, if the rate is greater than
~paw-ascii-rate~, then it is considered as English, otherwise use
~paw-detect-language-program~ to detect the language of the TEXT, if
~paw-detect-language-p~ is t, or return as ~paw-non-ascii-language~ if
~paw-detect-language-p~ is nil. 

Setup ~paw-python-program~ if necessary, if the pip module is installed with
different python version

Supported edge-tts voice:
- ~paw-tts-english-voice~
- ~paw-tts-zh-cn-voice~
- ~paw-tts-zh-tw-voice~
- ~paw-tts-japanese-voice~
- ~paw-tts-korean-voice~
- Other languages: ~paw-tts-multilingual-voice~
Welcome PRs to add more languages :)

** Optional: Kagome (Japanese morphological analyzer)
#+begin_src sh
go install github.com/ikawaha/kagome/v2@latest
#+end_src

** Optional: Setup ECDICT (An Modified English Tokenizer and English to Chinese offline dictionary)
1. Download https://github.com/skywind3000/ECDICT/releases/download/1.0.28/ecdict-sqlite-28.zip
2. Unzip it, and ~paw-ecdict-db~ pointing to the location of ~stardict.db~.
3. Download nltk and nltk data for tokenizing the words
    #+begin_src sh
    pip install nltk
    python -m nltk.downloader stopwords
    python -m nltk.downloader punkt
    #+end_src
4. Setup ~paw-python-program~ if necessary, if the pip module is installed with
   different python version
5. Show/Highlight unknown words at the background
6. Enable ~paw-annotation-show-unknown-words-p~
7. Tweak five different filter settings to fit your need:
   + ~paw-ecdict-frq~: Minimal Frequency from frp, -1 means all
   + ~paw-ecdict-bnc~: Minimal Frequency from bnc, -1 means all
   + ~paw-ecdict-tags~: Tags for querying english words, set it part of: 'zk gk ky cet4 cet6 ielts toefl gre empty'.
   + ~paw-ecdict-oxford~: Whether within oxford 3000, 0 or 1, 1 means in oxford 3000
   + ~paw-ecdict-collins-max-level~: The max collins level, 1 to 5.
8. Add words to known words file
   + Setup ~paw-ecdict-known-words-files~ and ~paw-ecdict-default-known-words-file~,
     for example, I have two files, one is csv file downloaded from somewhere,
     the other is a plain text maintained manually.
     #+begin_src elisp
     (setq paw-ecdict-known-words-files `(,(expand-file-name "eudic.csv" org-directory)
                                         ,(expand-file-name "english.txt" org-directory)))
   (setq paw-ecdict-default-known-words-file (expand-file-name "english.txt" org-directory))

     #+end_src
9. Press Delete button, or run ~paw-delete-word~, the word will be added into the
  last line of ~paw-ecdict-default-known-words-file~ in which ECDICT will be added
  into the filtering setting. Or you can simple open
  ~paw-ecdict-default-known-words-file~ and add a word on the last line.
10. Please be noticed that ~paw-change-online-word-learning-level~ also has a KNOWN
    status, but this is only for online words, even if you change it to KNOWN,
    the word is still in the database and server. While the known words files
    mentioned above are only maintained locally, no databases are needed (at this
    moment), giving the user more flexibility.


* My Setup
#+begin_src emacs-lisp
(use-package paw
  :init
  (setq paw-db-file (expand-file-name "paw.sqlite" org-directory))
  ;; ecdict dictionary
  (setq paw-ecdict-db (expand-file-name "ecdict.db" org-directory))
  :custom
  ;; (paw-svg-enable t)
  (paw-pbm-enable t)
  (paw-detect-language-p t)
  (paw-click-overlay-enable t)
  (paw-annotation-read-only-enable t)
  ;; (paw-posframe-p (if (string-equal system-type "android") t))
  ;; For online words, you have to apply api on
  ;; https://my.eudic.net/OpenAPI/Authorization
  (paw-authorization-keys  "xxxxx")
  ;; limit other languages web buttons number
  (paw-english-web-button-number (if (eq system-type 'android) 3 4))
  ;; limit japanese web buttons number
  (paw-japanese-web-button-number (if (eq system-type 'android) 3 4))
  ;; limit general web buttons number
  (paw-general-web-button-number (if (eq system-type 'android) 2 4))
  :config
  ;; for images and attachments
  (setq paw-note-dir (expand-file-name "Dict_Notes" org-directory))
  ;; if the file was moved to other places after adding annotations, we can add
  ;; the parent path of the file for paw to search. This is necessary for
  ;; multiple clients (PC/Mobile/Pad) to use the same database but file location
  ;; is different.
  (setq paw-annotation-search-paths '("~/Data/Books/"
                                       "/storage/emulated/0/Books/"
                                       "/storage/emulated/0/Download/"
                                       "/storage/emulated/0/Download/Telegram/"
                                       "/storage/emulated/0/Org/web/"
                                       "~/org/web/"
                                       ))

  ;; display inline image annotation in *paw-view-note*
  (add-hook 'paw-view-note-after-render-hook #'org-display-inline-images)
  (add-hook 'context-menu-functions #'paw-annotation-context-menu)

  ;; use popweb as browse function
  (unless (string-equal system-type "android")
      (setq paw-dictionary-browse-function 'popweb-url-input)
      (setq paw-mdict-dictionary-function 'popweb-url-input))

  )




#+end_src
